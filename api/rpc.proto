syntax = "proto3";

package api;

import "github.com/vine-io/rbac/api/rbac.proto";

option go_package = "github.com/vine-io/rbac/api";
option java_package = "io.vine.services.rbac";
option java_multiple_files = true;

/*
AddPolicy(ctx context.Context, sub string, endpoint *vapi.Endpoint) error
	DelPolicy(ctx context.Context, sub string, endpoint *vapi.Endpoint) error
	AddGroupPolicy(ctx context.Context, subject *api.Subject) error
	DelGroupPolicy(ctx context.Context, subject *api.Subject) error
	Enforce(ctx context.Context, sub string, endpoint *vapi.Endpoint) (bool, error)
 */

// +gen:openapi
service RBACService {
    rpc GetPolicy(GetPolicyRequest) returns (GetPolicyResponse);
    rpc AddPolicy(AddPolicyRequest) returns (AddPolicyResponse);
    rpc DelPolicy(DelPolicyRequest) returns (DelPolicyResponse);
    rpc AddGroupPolicy(AddGroupPolicyRequest) returns (AddGroupPolicyResponse);
    rpc DelGroupPolicy(DelGroupPolicyRequest) returns (DelGroupPolicyResponse);
    rpc Enforce(EnforceRequest) returns (EnforceResponse);
}

message GetPolicyRequest {}

message GetPolicyResponse {
    repeated api.Policy policies = 1;
    repeated api.Subject subjects = 2;
}

message AddPolicyRequest {
    // +gen:required
    api.Policy policy = 1;
}

message AddPolicyResponse {}

message DelPolicyRequest {
    // +gen:required
    api.Policy policy = 1;
}

message DelPolicyResponse {}

message AddGroupPolicyRequest {
    // +gen:required
    api.Subject subject = 1;
}

message AddGroupPolicyResponse {}

message DelGroupPolicyRequest {
    // +gen:required
    api.Subject subject = 1;
}

message DelGroupPolicyResponse {}

message EnforceRequest {
    // +gen:required
    api.Policy policy = 1;
}

message EnforceResponse {
    bool result = 1;
}